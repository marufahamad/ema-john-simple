{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\ema-john-simple\\\\src\\\\components\\\\Shop\\\\Shop.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Cart from '../Cart/Cart';\nimport Product from '../Product/Product';\nimport { addToDb, getStoredCart } from '../../utilities/fakedb';\nimport './Shop.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Shop = () => {\n  _s();\n\n  const [products, setProducts] = useState([]);\n  const [cart, setCart] = useState([]); // products to be rendered on the UI\n\n  const [displayProducts, setDisplayProducts] = useState([]);\n  useEffect(() => {\n    fetch('./products.JSON').then(res => res.json()).then(data => {\n      setProducts(data);\n      setDisplayProducts(data);\n    });\n  }, []);\n  useEffect(() => {\n    if (products.length) {\n      const savedCart = getStoredCart();\n      const storedCart = [];\n\n      for (const key in savedCart) {\n        const addedProduct = products.find(product => product.key === key);\n\n        if (addedProduct) {\n          const quantity = savedCart[key];\n          addedProduct.quantity = quantity;\n          storedCart.push(addedProduct);\n        }\n      }\n\n      setCart(storedCart);\n    }\n  }, [products]);\n\n  const handleAddToCart = product => {\n    const newCart = [...cart, product];\n    setCart(newCart); // save to local storage (for now)\n\n    addToDb(product.key);\n  };\n\n  const handleSearch = event => {\n    const searchText = event.target.value;\n    const matchedProducts = products.filter(product => product.name.toLowerCase().includes(searchText.toLowerCase()));\n    setDisplayProducts(matchedProducts);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: handleSearch,\n        placeholder: \"Search Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"product-container\",\n        children: displayProducts.map(product => /*#__PURE__*/_jsxDEV(Product, {\n          product: product,\n          handleAddToCart: handleAddToCart\n        }, product.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 56\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cart-container\",\n        children: /*#__PURE__*/_jsxDEV(Cart, {\n          cart: cart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Shop, \"bLT3ANMNC9fSYJO6nDgHq7R/b68=\");\n\n_c = Shop;\nexport default Shop;\n\nvar _c;\n\n$RefreshReg$(_c, \"Shop\");","map":{"version":3,"sources":["C:/projects/ema-john-simple/src/components/Shop/Shop.js"],"names":["React","useEffect","useState","Cart","Product","addToDb","getStoredCart","Shop","products","setProducts","cart","setCart","displayProducts","setDisplayProducts","fetch","then","res","json","data","length","savedCart","storedCart","key","addedProduct","find","product","quantity","push","handleAddToCart","newCart","handleSearch","event","searchText","target","value","matchedProducts","filter","name","toLowerCase","includes","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Cart from '../Cart/Cart';\nimport Product from '../Product/Product';\nimport { addToDb, getStoredCart } from '../../utilities/fakedb';\nimport './Shop.css';\n\nconst Shop = () => {\n    const [products, setProducts] = useState([]);\n    const [cart, setCart] = useState([]);\n    // products to be rendered on the UI\n    const [displayProducts, setDisplayProducts] = useState([]);\n\n    useEffect(() => {\n        fetch('./products.JSON')\n            .then(res => res.json())\n            .then(data => {\n                setProducts(data);\n                setDisplayProducts(data);\n            });\n    }, []);\n\n    useEffect(() => {\n        if (products.length) {\n            const savedCart = getStoredCart();\n            const storedCart = [];\n            for (const key in savedCart) {\n                const addedProduct = products.find(product => product.key === key);\n                if (addedProduct) {\n                    const quantity = savedCart[key];\n                    addedProduct.quantity = quantity;\n                    storedCart.push(addedProduct);\n                }\n            }\n            setCart(storedCart);\n        }\n    }, [products])\n\n    const handleAddToCart = (product) => {\n        const newCart = [...cart, product];\n        setCart(newCart);\n        // save to local storage (for now)\n        addToDb(product.key);\n    }\n\n    const handleSearch = event => {\n        const searchText = event.target.value;\n\n        const matchedProducts = products.filter(product => product.name.toLowerCase().includes(searchText.toLowerCase()));\n\n        setDisplayProducts(matchedProducts);\n    }\n\n    return (\n        <>\n            <div className=\"search-container\">\n                <input\n                    type=\"text\"\n                    onChange={handleSearch}\n                    placeholder=\"Search Product\" />\n            </div>\n            <div className=\"shop-container\">\n                <div className=\"product-container\">\n                    {\n                        displayProducts.map(product => <Product\n                            key={product.key}\n                            product={product}\n                            handleAddToCart={handleAddToCart}\n                        >\n                        </Product>)\n                    }\n                </div>\n                <div className=\"cart-container\">\n                    <Cart cart={cart}></Cart>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default Shop;"]},"metadata":{},"sourceType":"module"}