{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\ema-john-simple\\\\src\\\\components\\\\Cart\\\\Cart.js\";\nimport React from 'react';\nimport './Cart.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = props => {\n  const {\n    cart\n  } = props; // const totalReducer = (previous, product) => previous + product.price;\n  // const total = cart.reduce(totalReducer, 0);\n\n  let totalQuantity = 0;\n  let total = 0;\n\n  for (const product of cart) {\n    if (!product.quantity) {\n      product.quantity = 1;\n    }\n\n    total = total + product.price * product.quantity;\n    totalQuantity = totalQuantity + product.quantity;\n  }\n\n  const shipping = total > 0 ? 15 : 0;\n  const tax = (total + shipping) * 0.10;\n  const grandTotal = total + shipping + tax;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Order Summary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: [\"Items Ordered: \", totalQuantity]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Total: \", total.toFixed(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Shipping: \", shipping]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"tax: \", tax.toFixed(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Grand Total: \", grandTotal.toFixed(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["C:/projects/ema-john-simple/src/components/Cart/Cart.js"],"names":["React","Cart","props","cart","totalQuantity","total","product","quantity","price","shipping","tax","grandTotal","toFixed"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACpB,QAAM;AAAEC,IAAAA;AAAF,MAAWD,KAAjB,CADoB,CAGpB;AACA;;AACA,MAAIE,aAAa,GAAG,CAApB;AACA,MAAIC,KAAK,GAAG,CAAZ;;AACA,OAAK,MAAMC,OAAX,IAAsBH,IAAtB,EAA4B;AACxB,QAAI,CAACG,OAAO,CAACC,QAAb,EAAuB;AACnBD,MAAAA,OAAO,CAACC,QAAR,GAAmB,CAAnB;AACH;;AACDF,IAAAA,KAAK,GAAGA,KAAK,GAAGC,OAAO,CAACE,KAAR,GAAgBF,OAAO,CAACC,QAAxC;AACAH,IAAAA,aAAa,GAAGA,aAAa,GAAGE,OAAO,CAACC,QAAxC;AACH;;AAED,QAAME,QAAQ,GAAGJ,KAAK,GAAG,CAAR,GAAY,EAAZ,GAAiB,CAAlC;AACA,QAAMK,GAAG,GAAG,CAACL,KAAK,GAAGI,QAAT,IAAqB,IAAjC;AACA,QAAME,UAAU,GAAGN,KAAK,GAAGI,QAAR,GAAmBC,GAAtC;AACA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,oCAAoBN,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAA,4BAAWC,KAAK,CAACO,OAAN,CAAc,CAAd,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAA,+BAAcH,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI;AAAA,0BAASC,GAAG,CAACE,OAAJ,CAAY,CAAZ,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI;AAAA,kCAAiBD,UAAU,CAACC,OAAX,CAAmB,CAAnB,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CA7BD;;KAAMX,I;AA+BN,eAAeA,IAAf","sourcesContent":["import React from 'react';\nimport './Cart.css';\n\nconst Cart = (props) => {\n    const { cart } = props;\n\n    // const totalReducer = (previous, product) => previous + product.price;\n    // const total = cart.reduce(totalReducer, 0);\n    let totalQuantity = 0;\n    let total = 0;\n    for (const product of cart) {\n        if (!product.quantity) {\n            product.quantity = 1;\n        }\n        total = total + product.price * product.quantity;\n        totalQuantity = totalQuantity + product.quantity;\n    }\n\n    const shipping = total > 0 ? 15 : 0;\n    const tax = (total + shipping) * 0.10;\n    const grandTotal = total + shipping + tax;\n    return (\n        <div>\n            <h3>Order Summary</h3>\n            <h5>Items Ordered: {totalQuantity}</h5>\n            <br />\n            <p>Total: {total.toFixed(2)}</p>\n            <p>Shipping: {shipping}</p>\n            <p>tax: {tax.toFixed(2)}</p>\n            <p>Grand Total: {grandTotal.toFixed(2)}</p>\n        </div>\n    );\n};\n\nexport default Cart;"]},"metadata":{},"sourceType":"module"}